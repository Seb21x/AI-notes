Stwórz aplikację, która pomaga użytkownikowi organizować i przetwarzać notatki za pomocą elementów sztucznej inteligencji: rozpoznawania języka naturalnego (NLP), klasyfikacji tekstu, ekstrakcji informacji, a nawet generowania streszczeń.

Funkcje:
Dodawanie notatek – użytkownik może dodać tekst notatki (np. z zajęć, spotkania itp.).

Klasyfikacja notatek – przypisanie notatki do kategorii (np. "matematyka", "projekt", "spotkanie") na podstawie treści.

Streszczenie notatki – automatyczne tworzenie krótkiego podsumowania.

Wyszukiwanie semantyczne – znajdowanie notatek na podstawie zapytania w języku naturalnym (np. "gdzie były wzory na prędkość?").

Interfejs GUI/Web – np. prosta aplikacja w Flasku lub PyQt, żeby używać bez konsoli.


Cel	        Narzędzia
Programowanie	Python
NLP	        spaCy, HuggingFace Transformers, NLTK
Klasyfikacja	Scikit-learn / TensorFlow (dla prostych modeli)
GUI / Web	Flask / PyQt / Gradio
Baza danych	SQLite lub pliki JSON na początek

Etapy realizacji:
Etap 1: Podstawowa aplikacja
Interfejs do dodawania/wyświetlania notatek.

Zapisywanie notatek w bazie danych.

Etap 2: Klasyfikacja notatek
Naucz prosty klasyfikator (np. Naive Bayes) na przykładach notatek z etykietami.

Etap 3: Automatyczne streszczenie
Użyj modelu typu t5-small z HuggingFace lub gensim.summarization.

Etap 4: Wyszukiwanie semantyczne
Zakoduj notatki za pomocą sentence-transformers (BERT), porównuj zapytania do notatek.

Etap 5: Interfejs użytkownika
Zrób prosty interfejs: np. lista notatek, przycisk do podglądu streszczenia, wyszukiwarka.

Dodatkowe pomysły na rozwój:
Rozpoznawanie notatek ze zdjęć (OCR – np. Tesseract).

Głosowe dodawanie notatek (Speech-to-Text).

Sugerowanie tagów na podstawie treści.

Wersja mobilna z Fluttera + API backendowe.